services:

  mariadb:
    build: requirements/mariadb
    container_name: mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}     
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    env_file:
      - .env
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - docker-network
    restart: on-failure
    expose:
      - 3306

  wordpress:
    build: requirements/wordpress
    container_name: wordpress
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - WORDPRESS_TITLE=${WORDPRESS_TITLE}
      - WORDPRESS_ADMIN_USER=${WORDPRESS_ADMIN_USER}
      - WORDPRESS_ADMIN_PASSWORD=${WORDPRESS_ADMIN_PASSWORD}
      - WORDPRESS_ADMIN_EMAIL=${WORDPRESS_ADMIN_EMAIL}
      - WORDPRESS_USER=${WORDPRESS_USER}
      - WORDPRESS_USER_PASSWORD=${WORDPRESS_USER_PASSWORD}
      - WORDPRESS_USER_EMAIL=${WORDPRESS_USER_EMAIL}
    env_file:
      - .env
    volumes:
      - wordpress-data:/var/www/html
    networks:
      - docker-network
    depends_on:
      - mariadb
    restart: on-failure
    expose:
      - 9000

  nginx:
    build: requirements/nginx
    container_name: nginx
    env_file:
      - .env
    volumes:
      - wordpress-data:/var/www/html
    networks:
      - docker-network
    depends_on:
      - wordpress
    restart: on-failure
    ports: 
      - "443:443"




volumes:
  mariadb-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/mariadb
  wordpress-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/wordpress

networks:
  docker-network:
    name: docker-network
    driver: bridge
